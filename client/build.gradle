apply plugin: 'net.corda.plugins.cordapp'

buildscript {

    ext {
        corda_release_distribution = 'net.corda'
        corda_core_release_distribution = 'net.corda'
        corda_release_group = 'net.corda'
        corda_release_version = '4.3'
        corda_gradle_plugins_version = '5.0.6'
        kotlin_version = '1.2.71'
        junit_version = '4.12'
        slf4j_version = '1.7.25'
        log4j_version = '2.11.2'
        corda_platform_version = '4'.toInteger()
        tokens_release_version = '1.1'
        tokens_release_group = 'com.r3.corda.lib.tokens'
        braid_version = '4.1.2-RC13'
        spring_boot_version = '2.0.3.RELEASE'
        spring_boot_gradle_plugin_version = '2.1.1.RELEASE'
    }

    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
        maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "net.corda.plugins:cordapp:$corda_gradle_plugins_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_gradle_plugin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
    }
}

// needed to resolve dependency error
// Constructor threw exception; nested exception is java.lang.NoSuchMethodError: io.netty.util.AsciiString.cached(Ljava/lang/String;)Lio/netty/util/AsciiString;
configurations.all {
    resolutionStrategy {
        force 'io.netty:netty-all:4.1.25.Final'
    }
}

apply plugin: 'kotlin'
apply plugin: "kotlin-spring"
apply plugin: 'application'
apply plugin: 'org.springframework.boot'

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven { url 'https://software.r3.com/artifactory/corda' }
    maven { url 'https://jitpack.io' }
    maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-lib' }
    maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-lib-dev' }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions {
        languageVersion = "1.2"
        apiVersion = "1.2"
        jvmTarget = "1.8"
        javaParameters = true   // Useful for reflection.
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "junit:junit:$junit_version"

    compile "$corda_core_release_distribution:corda-core:$corda_release_version"
    compile "$corda_release_distribution:corda-jackson:$corda_release_version"
    compile "$corda_release_distribution:corda-rpc:$corda_release_version"
    compile "$tokens_release_group:tokens-contracts:$tokens_release_version"

    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: "$spring_boot_version"

    // added since rxjava 1.xx does not implement publisher so cant be used by spring webflux
    compile group: 'io.reactivex', name: 'rxjava-reactive-streams', version: '1.2.1'

    compile("io.bluebank.braid:braid-corda:$braid_version") {
        exclude group: 'javax.validation', module: 'validation-api'
    }

    cordapp project(":workflows")
}

mainClassName = "com.rec.client.ServerKt"

sourceSets {
    main.java.srcDirs += 'src/main/kotlin/'
    test.java.srcDirs += 'src/test/kotlin/'
}

bootJar {
    mainClassName = "com.rec.client.ServerKt"
}